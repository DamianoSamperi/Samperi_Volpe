apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: | #TO_DO in questo caso ho fatto per node-exporter, ma lo possiamo modificare #aggiunto evalutation inerval, rules, alerting
    global:
      scrape_interval: 15s
      evaluation_interval: 15s  
    rule_files:
      - rules.yml
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: keep
          regex: node-exporter
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
      
#        static_configs:
#          - targets: ['node-exporter:9100']

#kubernetes_sd_configs:
#          - role: endpoints
#relabel_configs:
#          - source_labels: [__meta_kubernetes_endpoints_name]
#            regex: 'node-exporter'
#            action: keep
         
  #     - job_name: 'k8apiserver'
  #     kubernetes_sd_configs:  #TO_DO per l'API server
  #     - role: endpoints
  #     scheme: https
  #     tls_config:
  #       ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #       insecure_skip_verify: true  # Required if using Minikube.
  #     bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #     relabel_configs:
  #  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #       action: keep
  #       regex: default;kubernetes;https

  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml #TO_DO non so se dobbiamo modificarlo
              subPath: prometheus.yml
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '9090'
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: NodePort
